{
  "version": "1.13.1",
  "compound": {
    "kind": "class",
    "id": "class_geolux_camera",
    "name": "GeoluxCamera",
    "url_base": "class_geolux_camera",
    "url": "class_geolux_camera.html",
    "include": [
      "&lt;src/GeoluxCamera.h&gt;",
      "_geolux_camera_8h.html"
    ],
    "has_template_details": false,
    "templates": null,
    "brief": "The class for the Geoluxh HydroCAM.",
    "description": "",
    "sections": "",
    "deprecated": null,
    "since": null,
    "example_navigation": null,
    "footer_navigation": null,
    "topics": [],
    "dirs": [],
    "files": [],
    "namespaces": [],
    "classes": [],
    "base_classes": [],
    "derived_classes": [],
    "enums": [],
    "typedefs": [],
    "funcs": [],
    "vars": [],
    "defines": [],
    "public_types": [
      [
        "enum",
        {
          "base_url": "class_geolux_camera.html",
          "id": "af27739bd27e7b09d5ea1ab607520223b",
          "include": null,
          "has_details": true,
          "type": "",
          "name": "geolux_status",
          "brief": "The possible camera statuses.",
          "description": "",
          "deprecated": null,
          "since": null,
          "is_protected": false,
          "is_strong": false,
          "values": [
            {
              "id": "af27739bd27e7b09d5ea1ab607520223ba5f185f52a20da43e27a77b285c59b71e",
              "name": "OK",
              "initializer": "= 1",
              "brief": "Status is &quot;OK&quot; or &quot;READY&quot;.",
              "description": "",
              "deprecated": null,
              "since": null
            },
            {
              "id": "af27739bd27e7b09d5ea1ab607520223baaa09f3c35e9355fc896ac1e5afdd974d",
              "name": "ERROR",
              "initializer": "",
              "brief": "Status is in error.",
              "description": "",
              "deprecated": null,
              "since": null
            },
            {
              "id": "af27739bd27e7b09d5ea1ab607520223baa32996969729c02f31687380bbc399c5",
              "name": "BUSY",
              "initializer": "",
              "brief": "Status is &quot;BUSY&quot;.",
              "description": "",
              "deprecated": null,
              "since": null
            },
            {
              "id": "af27739bd27e7b09d5ea1ab607520223ba1074e14e121ecd149127cbef47ba2973",
              "name": "NONE",
              "initializer": "",
              "brief": "Status is &quot;NONE&quot; or unknown.",
              "description": "",
              "deprecated": null,
              "since": null
            }
          ],
          "has_value_details": true
        }
      ],
      [
        "enum",
        {
          "base_url": "class_geolux_camera.html",
          "id": "a42b93152ee76d1f653d5880185c01343",
          "include": null,
          "has_details": true,
          "type": "",
          "name": "geolux_night_mode",
          "brief": "The possible camera IR filter (day/night) modes.",
          "description": "",
          "deprecated": null,
          "since": null,
          "is_protected": false,
          "is_strong": false,
          "values": [
            {
              "id": "a42b93152ee76d1f653d5880185c01343a0270f54a68974e43606d7cabfdf18a90",
              "name": "DAY",
              "initializer": "= 0",
              "brief": "In day mode, the IR filter in the camera is always active.",
              "description": "",
              "deprecated": null,
              "since": null
            },
            {
              "id": "a42b93152ee76d1f653d5880185c01343a4f9326bd9dcaf8df5ccc38b502e214a5",
              "name": "NIGHT",
              "initializer": "",
              "brief": "In night mode, the IR filter is disabled and the camera gives a black and white image.",
              "description": "",
              "deprecated": null,
              "since": null
            },
            {
              "id": "a42b93152ee76d1f653d5880185c01343a8bd33b2d60fce6ad5639f3e824359444",
              "name": "AUTO",
              "initializer": "",
              "brief": "In auto mode, the camera measures the current level of environmental illumination and automatically selects the optimal mode for the IR filter.",
              "description": "",
              "deprecated": null,
              "since": null
            }
          ],
          "has_value_details": true
        }
      ],
      [
        "enum",
        {
          "base_url": "class_geolux_camera.html",
          "id": "a89e49cc3c84656ea074745d0a01e4137",
          "include": null,
          "has_details": true,
          "type": "",
          "name": "geolux_ir_mode",
          "brief": "The possible camera IR LED modes.",
          "description": "",
          "deprecated": null,
          "since": null,
          "is_protected": false,
          "is_strong": false,
          "values": [
            {
              "id": "a89e49cc3c84656ea074745d0a01e4137a780b639e2812da8c2c52f25e0f2ec3b5",
              "name": "IR_ON",
              "initializer": "= 0",
              "brief": "In on mode, the IR LEDs are on during the night, and off during the day.",
              "description": "",
              "deprecated": null,
              "since": null
            },
            {
              "id": "a89e49cc3c84656ea074745d0a01e4137a2e85937a8a94662632630ae8aff3a139",
              "name": "IR_OFF",
              "initializer": "",
              "brief": "In off mode, the IR LEDs are always off.",
              "description": "",
              "deprecated": null,
              "since": null
            },
            {
              "id": "a89e49cc3c84656ea074745d0a01e4137ad230783011680d352f58171c7b51e654",
              "name": "IR_AUTO",
              "initializer": "",
              "brief": "In auto mode, the IR LEDs are active only during image acquisition, autofocus or manual zoom or focus operations.",
              "description": "",
              "deprecated": null,
              "since": null
            }
          ],
          "has_value_details": true
        }
      ]
    ],
    "public_static_funcs": [],
    "typeless_funcs": [
      {
        "base_url": "class_geolux_camera.html",
        "id": "a36fcae0c034c8a5a0682a33a0788b38e",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "GeoluxCamera",
        "brief": "Construct a new <a href=\"class_geolux_camera.html\" class=\"m-doc\">GeoluxCamera</a> object - no action needed.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "af717b9c35d07243a6fac89832a7e114c",
        "include": null,
        "has_details": false,
        "type": "",
        "name": "~GeoluxCamera",
        "brief": "Destroy the <a href=\"class_geolux_camera.html\" class=\"m-doc\">GeoluxCamera</a> object - no action needed.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "public_funcs": [
      {
        "base_url": "class_geolux_camera.html",
        "id": "a4113088b8409e7f9fbe163cc8c383fc6",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "begin",
        "brief": "Sets up the camera module; identical to GeoluxCamera::init().",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "stream",
            "type": "Stream*",
            "type_name": "Stream* stream",
            "default": null,
            "description": "The stream instance the camera is attached to",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a9506e5e8f24b4b73ffeb59a7653bc084",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "begin",
        "brief": "Sets up the camera module; identical to GeoluxCamera::init().",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "stream",
            "type": "Stream&amp;",
            "type_name": "Stream&amp; stream",
            "default": null,
            "description": "The stream instance the camera is attached to",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "ad298742e43ebff1318c5100beb8df7c3",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "begin",
        "brief": "Sets up the camera module; identical to GeoluxCamera::init().",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "stream",
            "type": "HardwareSerial*",
            "type_name": "HardwareSerial* stream",
            "default": null,
            "description": "The stream instance the camera is attached to",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a67b5a6e64feb618d9d0861ff2cff2fb4",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "begin",
        "brief": "Sets up the camera module; identical to GeoluxCamera::init().",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "stream",
            "type": "HardwareSerial&amp;",
            "type_name": "HardwareSerial&amp; stream",
            "default": null,
            "description": "The stream instance the camera is attached to",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "ab453cb2ac47069faf2437aca6dff6765",
        "include": null,
        "has_details": true,
        "type": "<a href=\"#af27739bd27e7b09d5ea1ab607520223b\" class=\"m-doc\">geolux_<wbr />status</a>",
        "name": "takeSnapshot",
        "brief": "This command requests that the camera starts taking the next snapshot.",
        "description": "<p>Immediately after the command is received, the camera will return the response with the current status, which can be OK, ERR or BUSY. If the response is OK, this means that the camera is now in the process of taking the snapshot and compressing it to JPEG. If the response is BUSY, this means that a previous #take_snapshot, #move_zoom, or #move_focus command has not yet been completed, or the camera is waiting for auto exposure process to determine the best possible exposure for current environment conditions. The ERR response indicates a general error, and the #take_snapshot command should be sent again to retry the operation. After sending the #take_snapshot command, the #get_status command should be periodically sent to check when the snapshot is ready for download.</p>",
        "return_value": "The status of the latest snapshot",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "aac74a385c3ec6df42ebae43ded3f5aa2",
        "include": null,
        "has_details": true,
        "type": "<a href=\"#af27739bd27e7b09d5ea1ab607520223b\" class=\"m-doc\">geolux_<wbr />status</a>",
        "name": "getStatus",
        "brief": "Get the camera status.",
        "description": "",
        "return_value": "The current camera status",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a18f8de055ec9470cd348e86303e8bd71",
        "include": null,
        "has_details": true,
        "type": "int32_t",
        "name": "getImageSize",
        "brief": "Get the size of any available image.",
        "description": "",
        "return_value": "The size of the image, in bytes, or 0 if none is available",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a9020dc570b47f41685e36e302c1a3d55",
        "include": null,
        "has_details": true,
        "type": "uint32_t",
        "name": "getImageChunk",
        "brief": "This command requests the camera to send the image data chunk.",
        "description": "<p>The image is sent in JPEG format, and can be sent only after the #get_status command returns the status READY. Three parameters need to be supplied to the camera. The OFFSET parameter is the starting offset of the chunk in JPEG image data. The LENGTH parameter is the requested length in bytes of the data chunk to be sent while the FORMAT parameter specifies which format the camera should use to transmit the data chunk, and it can be any of the following: RAW, HEX or BASE64. The image data is returned immediately without any trailing <code>&lt;CR&gt;&lt;LF&gt;</code> pairs. If the format is RAW, then the chunk will not be encoded and raw binary data will be returned. If the format is set to BASE64, the chunk will be BASE64 encoded, and if the format is HEX then each byte in the data chunk will be encoded as two ASCII characters representing the HEX code of the byte. If OFFSET and LENGTH parameters are set so that a part of the chunk (or the whole chunk) is beyond the end of the image data, the camera will return the requested number of bytes, but bytes beyond the end of image will be sent as zeroes</p><aside class=\"m-note m-info\"><h4>Note</h4><p>This command always requests &quot;RAW&quot; data. The &quot;HEX&quot; and &quot;BASE64&quot; requests don&#x27;t work properly on the camera - it is a camera problem not a fault of this library.</p></aside><aside class=\"m-note m-danger\"><h4>Warning</h4><p>This function will automatically trim off the first two bytes junk returned by the camera. Every chunk is returned with two bytes of junk at the beginning and the total data returned is two bytes longer than requested to account for it. This is <strong>NOT</strong> documented anywhere in the camera&#x27;s manual.</p><p>This function does <strong>NOT</strong> trim any trailing zeros from the request. Don&#x27;t request more data than available.</p><p>The offset parameter does <strong>NOT</strong> work as I expected in my testing. The camera appears to return data starting from wherever it left off after the last request. You cannot re-request already sent chunks.</p></aside>",
        "return_value": "The number of bytes returned",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "buf",
            "type": "uint8_t*",
            "type_name": "uint8_t* buf",
            "default": null,
            "description": "A buffer to store the image data in. The buffer should be <strong>at least</strong> 256 bytes; &gt;= 512 is preferred.",
            "direction": ""
          },
          {
            "name": "offset",
            "type": "size_t",
            "type_name": "size_t offset",
            "default": null,
            "description": "The offset of the chunk",
            "direction": ""
          },
          {
            "name": "length",
            "type": "size_t",
            "type_name": "size_t length",
            "default": null,
            "description": "The length of data to receive",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a98ed9498870863ef264a07592127a05a",
        "include": null,
        "has_details": true,
        "type": "uint32_t",
        "name": "transferImage",
        "brief": "Transfer the image data from the camera stream to a secondary stream (like the print input of an SD card).",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "xferStream",
            "type": "Stream*",
            "type_name": "Stream* xferStream",
            "default": null,
            "description": "The stream to transfer data to",
            "direction": ""
          },
          {
            "name": "image_size",
            "type": "int32_t",
            "type_name": "int32_t image_size",
            "default": "0",
            "description": "The size of image data to transfer. If not specified, the <a href=\"#a18f8de055ec9470cd348e86303e8bd71\" class=\"m-doc\">getImageSize()</a> function is used to query to size from the camera. If the wrong image size is given, the resulting file will not be usable.",
            "direction": ""
          },
          {
            "name": "chunk_size",
            "type": "int32_t",
            "type_name": "int32_t chunk_size",
            "default": "16384",
            "description": "The size of chunks to use while talking to the camera; optional with a default value of <a href=\"_geolux_camera_8h.html#a9c4294f8b4e5a4a57576f14c65f94426\" class=\"m-doc\">DEFAULT_<wbr />XFER_<wbr />CHUNK_<wbr />SIZE</a>.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a7711179cb038adfb6c447ef8d114f8ce",
        "include": null,
        "has_details": true,
        "type": "uint32_t",
        "name": "transferImage",
        "brief": "Transfer the image data from the camera stream to a secondary stream (like the print input of an SD card).",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "xferStream",
            "type": "Stream&amp;",
            "type_name": "Stream&amp; xferStream",
            "default": null,
            "description": "The stream to transfer data to",
            "direction": ""
          },
          {
            "name": "image_size",
            "type": "int32_t",
            "type_name": "int32_t image_size",
            "default": "0",
            "description": "The size of image data to transfer. If not specified, the <a href=\"#a18f8de055ec9470cd348e86303e8bd71\" class=\"m-doc\">getImageSize()</a> function is used to query to size from the camera. If the wrong image size is given, the resulting file will not be usable.",
            "direction": ""
          },
          {
            "name": "chunk_size",
            "type": "int32_t",
            "type_name": "int32_t chunk_size",
            "default": "16384",
            "description": "The size of chunks to use while talking to the camera; optional with a default value of <a href=\"_geolux_camera_8h.html#a9c4294f8b4e5a4a57576f14c65f94426\" class=\"m-doc\">DEFAULT_<wbr />XFER_<wbr />CHUNK_<wbr />SIZE</a>.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a1a9c219c9d7b56699fcdc301e57ffee4",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "restart",
        "brief": "Restart the module.",
        "description": "",
        "return_value": "True if the module was successfully restarted, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "ad09b2d6dfba268d83c84bf2d226e0ef7",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "printCameraInfo",
        "brief": "Prints information about the camera the the input stream.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "outStream",
            "type": "Stream*",
            "type_name": "Stream* outStream",
            "default": null,
            "description": "A stream to print the information to",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a137f0e78aebfccd7734ef857e1ae2518",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "printCameraInfo",
        "brief": "Prints information about the camera the the input stream.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "outStream",
            "type": "Stream&amp;",
            "type_name": "Stream&amp; outStream",
            "default": null,
            "description": "A stream to print the information to",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a9b3bff3911169288d37a59208badcd53",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "getDeviceType",
        "brief": "Get the camera&#x27;s device type.",
        "description": "",
        "return_value": "The device type",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "aad20f4aa29e63307c86673cb80f2a211",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "getCameraFirmware",
        "brief": "Get the camera firmware information.",
        "description": "",
        "return_value": "The firmware version as major.minor.patch",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a544eda9aae8fb936d47c1b864ab0fdfa",
        "include": null,
        "has_details": true,
        "type": "uint32_t",
        "name": "getCameraSerialNumber",
        "brief": "Get the camera serial number.",
        "description": "",
        "return_value": "The serial number",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a7528d3579f37be0082694fc5349a9f98",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "runAutofocus",
        "brief": "This command starts the process of moving the lens focus and searching for sharpest image around the center point defined and stored with the #set_autofocus_point command.",
        "description": "<p>The returned status can be OK or BUSY, if the previous autofocus command is not completed yet, zoom command is still active or there is other process that could be disrupted by moving lens focus.</p>",
        "return_value": "True if the autofocus started successfully, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "aaf38a48ddaa95b588f4ee5302ff33404",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setResolution",
        "brief": "This command changes the image resolution.",
        "description": "<p>The RESOLUTION parameter must be one of the following:</p><ul><li>&quot;160x120&quot; (4:3, 0.019 megapixel, Quarter-QVGA, QQVGA)</li><li>&quot;320x240&quot; (4:3, 0.077 megapixel, Quarter VGA , QVGA)</li><li>&quot;640x480&quot; (4:3, 0.307 megapixel, VGA)</li><li>&quot;800x600&quot; (4:3, 0.48 megapixel, Super VGA, SVGA)</li><li>&quot;1024x768&quot; (4:3, 0.79 megapixel, XGA)</li><li>&quot;1280x960&quot; (4:3, 1.23 megapixel, QuadVGA)</li><li>&quot;1600x1200&quot; (4:3, 1.92 megapixel, Ultra-XGA, UXGA)</li><li>&quot;1920x1080&quot; (16:9, 2.07 megapixel, 1080p, Full HD, FHD)</li><li>&quot;2048x1536&quot; (4:3, 3.15 megapixel, Quad-XGA, QXGA)</li><li>&quot;2592x1944&quot; (4:3, 5.04 megapixel, 1944p)</li></ul><aside class=\"m-note m-danger\"><h4>Warning</h4><p>If this command does not succeeded, check your input resolution. It must match one of the strings from the above list exactly.</p></aside>",
        "return_value": "True if the resolution was successfully changed, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "resolution",
            "type": "const char*",
            "type_name": "const char* resolution",
            "default": null,
            "description": "The desired resolution",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "ad1b7eba306b8215c47e531cd6634b3ff",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "getResolution",
        "brief": "Get the camera resolution.",
        "description": "",
        "return_value": "The camera resolution as a string",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a61e6cbcdc98790a16846b1eec0429431",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setQuality",
        "brief": "This command changes the JPEG quality parameter, which can be in the range between 1 and 100.",
        "description": "<p>100 corresponds to the best image quality with the biggest file size, and lower numbers will give stronger compression. The recommended setting is in the range of 70-80. The returned STATUS can be OK or ERR, if the given parameter is invalid.</p>",
        "return_value": "True if the quality/compression was successfully changed, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "compression",
            "type": "uint8_t",
            "type_name": "uint8_t compression",
            "default": null,
            "description": "The JPEG quality - 0-100",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a6a92369e57862cbaaef677d977da1475",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "getQuality",
        "brief": "Get the JPEG quality parameter value.",
        "description": "",
        "return_value": "The JPEG quality parameter value",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a29b808dbd797c9fc25a86f380ae46d4e",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setJPEGMaximumSize",
        "brief": "This command changes the JPEG maximum file size which is a decimal number in kB which specifies the maximum JPEG file size generated after a snapshot is taken.",
        "description": "<p>The camera will try to reduce the quality in several steps to get the file size below the specified limit, and it will generate the minimum file possible if the goal could not be reached. The value 0 means no limit in size is required (no quality reduction is done over the one set in the Flash already). Other values represent maximum JPEG file size requirement in kilobytes, but please note that it may not be possible for HydroCam to satisfy this requirement, and in this case, it will start decreasing image quality internally, starting from the maximum possible quality, but without changing the quality parameter as stored in the Flash memory. As soon as the resulting JPEG file is at or below the required file size, the search will terminate and the file will be generated with the quality reached. If no requirement was met, the resulting file size will be whatever was accomplished in the last step.</p>",
        "return_value": "True if the maximum image size was successfully changed, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "size",
            "type": "uint16_t",
            "type_name": "uint16_t size",
            "default": null,
            "description": "The maximum JPEG image size in kb.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a063623c405c88e9b3bb35c886bb53d5a",
        "include": null,
        "has_details": true,
        "type": "uint32_t",
        "name": "getJPEGMaximumSize",
        "brief": "Get the JPEG maximum file size.",
        "description": "",
        "return_value": "The JPEG maximum file size",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a18bbe1ed545323b3db538db54b890ba6",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setNightMode",
        "brief": "Changes the camera mode according to the given MODE parameter which can be either day, night or auto.",
        "description": "<p>In day mode, the IR filter in the camera is always active. In night mode, the IR filter is disabled and the camera gives a black and white image. In auto mode, the camera measures the current level of environmental illumination and automatically selects the optimal mode for the IR filter.</p>",
        "return_value": "True if the night mode was successfully changed, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "mode",
            "type": "<a href=\"#a42b93152ee76d1f653d5880185c01343\" class=\"m-doc\">geolux_<wbr />night_<wbr />mode</a>",
            "type_name": "<a href=\"#a42b93152ee76d1f653d5880185c01343\" class=\"m-doc\">geolux_<wbr />night_<wbr />mode</a> mode",
            "default": null,
            "description": "The mode from the <a href=\"#a42b93152ee76d1f653d5880185c01343\" class=\"m-doc\">GeoluxCamera::<wbr />geolux_night_mode</a> enum",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a1f7f83985e78df969a2a7cfd510e8419",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setNightMode",
        "brief": "Changes the camera mode according to the given MODE parameter which can be either day, night or auto.",
        "description": "<p>In day mode, the IR filter in the camera is always active. In night mode, the IR filter is disabled and the camera gives a black and white image. In auto mode, the camera measures the current level of environmental illumination and automatically selects the optimal mode for the IR filter.</p>",
        "return_value": "True if the night mode was successfully changed, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "mode",
            "type": "const char*",
            "type_name": "const char* mode",
            "default": null,
            "description": "The mode as characters, must be one of &quot;day&quot;, &quot;night&quot;, or &quot;auto&quot;.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "af90d62c75a22b7501ad4ca99c36f9c63",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "getNightMode",
        "brief": "Get the current night mode setting.",
        "description": "",
        "return_value": "the current night mode setting",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a692075a2c0969e0a173c630abd10ed9f",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setIRLEDMode",
        "brief": "Changes the camera\u2019s IR LED mode according to the given parameter which can be either off, on or auto.",
        "description": "<p>In off mode, the IR LEDs are always off. In on mode, the IR LEDs are on during the night, and off during the day. In auto mode, the IR LEDs are active only during image acquisition, autofocus or manual zoom or focus operations.</p>",
        "return_value": "True if the IR LED mode was successfully changed, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "mode",
            "type": "<a href=\"#a89e49cc3c84656ea074745d0a01e4137\" class=\"m-doc\">geolux_<wbr />ir_<wbr />mode</a>",
            "type_name": "<a href=\"#a89e49cc3c84656ea074745d0a01e4137\" class=\"m-doc\">geolux_<wbr />ir_<wbr />mode</a> mode",
            "default": null,
            "description": "The mode from the <a href=\"#a89e49cc3c84656ea074745d0a01e4137\" class=\"m-doc\">GeoluxCamera::<wbr />geolux_ir_mode</a> enum.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a22a85c138f9a4b551cdb6ae1f21ab376",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setIRLEDMode",
        "brief": "Changes the camera\u2019s IR LED mode according to the given parameter which can be either off, on or auto.",
        "description": "<p>In off mode, the IR LEDs are always off. In on mode, the IR LEDs are on during the night, and off during the day. In auto mode, the IR LEDs are active only during image acquisition, autofocus or manual zoom or focus operations.</p>",
        "return_value": "True if the IR LED mode was successfully changed, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "mode",
            "type": "const char*",
            "type_name": "const char* mode",
            "default": null,
            "description": "The mode as characters, must be one of &quot;day&quot;, &quot;night&quot;, or &quot;auto&quot;.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a2efd348fd538e3a6680ce41374ca7da7",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "getIRLEDMode",
        "brief": "Get the camera\u2019s IR LED mode.",
        "description": "",
        "return_value": "the camera\u2019s IR LED mode",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a4cc8428e7724b9199a3a8ce6ad65bf94",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "getIRFilterStatus",
        "brief": "Check if the IR filter is currently in place on the camera.",
        "description": "",
        "return_value": "True if the IR filter is currently on (in night mode), otherwise false (in day mode)",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a0e0647698857e2298a2625d99987eed6",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setAutofocusPoint",
        "brief": "Configures the point used for the autofocus operation.",
        "description": "<p>The x and y coordinates are specified as a percentage of the image size with (0,0) being at the bottom left. The values are in the 0 to 100 range. Change of autofocus coordinates does not apply until a new autofocus request is made using the command #run_autofocus. Please note that autofocus is also performed in the background of the zoom operation, but this autofocus does not use these autofocus point coordinates, as focus in that case is always in the middle of the image, i.e. the autofocus point is (50,50).</p>",
        "return_value": "True if the autofocus point was successfully changed, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "x",
            "type": "int8_t",
            "type_name": "int8_t x",
            "default": null,
            "description": "The position of the focus on the x axis, in percent starting on the left",
            "direction": ""
          },
          {
            "name": "y",
            "type": "int8_t",
            "type_name": "int8_t y",
            "default": null,
            "description": "The position of the focus on the y axis, in percent starting on the bottom",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a57722419ffed3c131721af5241a40709",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "getAutofocusX",
        "brief": "Get the position of the focus on the x axis.",
        "description": "",
        "return_value": "The position of the focus on the x axis, in percent starting on the left.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a93ec36494747d0587d8bdd40f3db2a52",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "getAutofocusY",
        "brief": "Get the position of the focus on the y axis.",
        "description": "",
        "return_value": "The position of the focus on the y axis, in percent starting on the bottom",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a0c2475061559000c3f0095e6773f80bd",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setAutoexposureRegion",
        "brief": "Configures the area used to measure brightness for the auto-exposure operation.",
        "description": "<p>The x and y coordinates of the center of the area, as well as the width and height of the area are all specified as a percentage of the image size with (0,0) being at the bottom left. The values are in the 0 to 100 range. Please note that if there was a conflict in the values specified, while individual values were still within valid range, the HydroCam will accept and store values specified, but will prioritize the size of the region when calculating image brightness and determine exposure. For example, if the coordinates of the center of the region were x=20 and y=30, while the size of the area was determined by width=200 and height=100, the camera would conclude it was not possible to comply with both requirements and would consider the center to be at x=100 and y=50 when calculating the brightness.</p>",
        "return_value": "True if the auto-exposure region was successfully changed, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "x",
            "type": "int8_t",
            "type_name": "int8_t x",
            "default": null,
            "description": "The left edge of the auto exposure measurement region, in percent starting from the left edge of the image",
            "direction": ""
          },
          {
            "name": "y",
            "type": "int8_t",
            "type_name": "int8_t y",
            "default": null,
            "description": "The bottom edge of the auto exposure measurement region, in percent starting from the bottom edge of the image",
            "direction": ""
          },
          {
            "name": "width",
            "type": "int8_t",
            "type_name": "int8_t width",
            "default": null,
            "description": "The width of the auto exposure measurement region, in percent",
            "direction": ""
          },
          {
            "name": "height",
            "type": "int8_t",
            "type_name": "int8_t height",
            "default": null,
            "description": "The height of the auto exposure measurement region, in percent",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a895eaa17f8dd38d22558c8b2677055ee",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "getAutoexposureX",
        "brief": "Get the left edge of the auto exposure measurement region.",
        "description": "",
        "return_value": "The left edge of the auto exposure measurement region, in percent starting from the left edge of the image",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "ac1494992ce64e7f2f41e90ca7872635f",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "getAutoexposureY",
        "brief": "Get the bottom edge of the auto exposure measurement region.",
        "description": "",
        "return_value": "The bottom edge of the auto exposure measurement region, in percent starting from the bottom edge of the image",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a60cdfb2aca98a26d087bd7ccc2718407",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "getAutoexposureWidth",
        "brief": "Get the width of the auto exposure measurement region.",
        "description": "",
        "return_value": "The width of the auto exposure measurement region, in percent",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a5bafb77ab2ab0d52bde49a5751f35faa",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "getAutoexposureHeight",
        "brief": "Get the height of the auto exposure measurement region.",
        "description": "",
        "return_value": "The height of the auto exposure measurement region, in percent",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "ab0bc070c48eaf418b2145f6c6b702c07",
        "include": null,
        "has_details": true,
        "type": "uint32_t",
        "name": "getExposureTime",
        "brief": "Get the current exposure time (shutter width).",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>The exposure time <strong>CANNOT</strong> be manually set. Only auto exposure is supported. You can set the region over which the auto exposure value is determined.</p></aside><aside class=\"m-note m-danger\"><h4>Warning</h4><p>I do not know the units of the return value!</p></aside>",
        "return_value": "The current exposure time",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "aa0a41b048ef9cb16a77262cdd696f638",
        "include": null,
        "has_details": true,
        "type": "uint32_t",
        "name": "getImageBrightness",
        "brief": "Get the mean image brightness.",
        "description": "",
        "return_value": "The mean image brightness",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a71af3005cd1d25d8f893958868a3e164",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setWhiteBalanceOffset",
        "brief": "Configures the white balance offset parameters for the red, green, and blue color components.",
        "description": "<p>The values are numbers in the range of 8 to 48. Each parameter is used for its color respectively, internally divided by 10, and used as a multiplier for the default sensor analog gain for that particular color.</p>",
        "return_value": "True if the white balance offset was successfully changed, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "red",
            "type": "int8_t",
            "type_name": "int8_t red",
            "default": null,
            "description": "The white balance offset in the red color channel.",
            "direction": ""
          },
          {
            "name": "green",
            "type": "int8_t",
            "type_name": "int8_t green",
            "default": null,
            "description": "The white balance offset in the green color channel.",
            "direction": ""
          },
          {
            "name": "blue",
            "type": "int8_t",
            "type_name": "int8_t blue",
            "default": null,
            "description": "The white balance offset in the blue color channel.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a5dde042f2da452db1ef752737b4a1291",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "getWhiteBalanceOffsetRed",
        "brief": "Get the white balance offset in the red color channel.",
        "description": "",
        "return_value": "The white balance offset in the red color channel",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a24d16ec3d6108c7955ab1704ad75d063",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "getWhiteBalanceOffsetGreen",
        "brief": "Get the white balance offset in the green color channel.",
        "description": "",
        "return_value": "The white balance offset in the green color channel",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a676f78b01e82c17e428a3b6492fcfdce",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "getWhiteBalanceOffsetBlue",
        "brief": "Get the white balance offset in the blue color channel.",
        "description": "",
        "return_value": "The white balance offset in the blue color channel",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a96023cb7b7ec71d9604c79628a7c84c5",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setColorCorrectionMode",
        "brief": "Sets the color correction mode. Valid values are integers between 0 and 3.",
        "description": "<p>The resulting effect of value 0 is that white balance correction is turned off, and #get_info command will report the color correction as off. Values 1 to 3 result in the white balance algorithm running with different set of parameters defined for each mode. Please contact the Geolux support for more information about different color correction modes.</p>",
        "return_value": "True if the color correction mode was successfully changed, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "mode",
            "type": "int8_t",
            "type_name": "int8_t mode",
            "default": null,
            "description": "The integer color correction mode.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "abccddf164e24f9dee4ea8c8a37861912",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "getColorCorrectionMode",
        "brief": "Check whether color correction is currently being applied.",
        "description": "",
        "return_value": "True if color correction is being applied, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a3ca674465a6227d6210cbdc29989c558",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "setAutoSnapshotInterval",
        "brief": "Sets the time interval in minutes for autonomous periodic snapshot operation.",
        "description": "<p>A valid argument is the number of minutes between 0 and 65535, with 0 meaning there is no autonomous snapshot operation. If the interval is set to some valid non-zero value, the user should take care that a new snapshot is not requested before the previous one was transferred. This command does not make much sense if only UART is used transfer images as the transfer would not happen automatically, but if FTP upload is enabled, the image will also be transferred to the FTP server automatically.</p><aside class=\"m-note m-info\"><h4>Note</h4><p>Please note that the camera needs to be powered on in order to take periodic snapshots, as there is no battery-operated clock, and the time interval is measured from the power up.</p></aside>",
        "return_value": "True if the auto snapshot inteval was successfully changed, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "interval",
            "type": "uint32_t",
            "type_name": "uint32_t interval",
            "default": null,
            "description": "The number of minutes between snapshots.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a127f35054585dd1d617dd9279c1a75d3",
        "include": null,
        "has_details": true,
        "type": "uint32_t",
        "name": "getAutoSnapshotInterval",
        "brief": "Get the auto snapshot interval.",
        "description": "",
        "return_value": "The auto snapshot interval",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "aac555e18dea5bae6f667e399d2dcc3f1",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "moveFocus",
        "brief": "This command forces the camera to move the focus of the lens for a given number of steps.",
        "description": "<p>The OFFSET parameter can be either a positive or a negative integer number. The focus movement is relative to the starting focus position. The returned STATUS can be either OK or ERR, if the OFFSET is outside of the allowed range (-100 to +100).</p>",
        "return_value": "True if the focus point was successfully changed, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "offset",
            "type": "int8_t",
            "type_name": "int8_t offset",
            "default": null,
            "description": "The focus offset relative to the starting position.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "afa021694b76f1582f2623fcbb270aea2",
        "include": null,
        "has_details": true,
        "type": "int16_t",
        "name": "getFocusPosition",
        "brief": "Get the current focus position.",
        "description": "",
        "return_value": "The current focus position",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a8afb92eb0265117a74123916125aabc3",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "moveZoom",
        "brief": "This command forces the camera to change the lens zoom for a given number of steps.",
        "description": "<p>The OFFSET parameter can be either a positive or a negative integer number. The zoom movement is relative to the starting zoom position. The returned STATUS can be either OK or ERR, if the OFFSET is outside of the allowed range (-100 to +100)</p>",
        "return_value": "True if the zoom point was successfully changed, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "offset",
            "type": "int8_t",
            "type_name": "int8_t offset",
            "default": null,
            "description": "The zoom offset relative to the starting zoom position",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "abd78b959f07e817ecce6c2170b6ff2c1",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "getZoomPosition",
        "brief": "Get the current zoom position.",
        "description": "",
        "return_value": "The current zoom position",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a4b4e7c62de9d895cf2e2481a4098e85b",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "sleep",
        "brief": "Put the module to sleep, starting from the time the command is issued and ending when sleep timer expires.",
        "description": "<aside class=\"m-note m-info\"><h4>Note</h4><p>There is no way to wake the camera up early! There is also no way to return the sleep timeout after sending the sleep command.</p></aside>",
        "return_value": "True if the module accepted the timeout has will go to sleep, otherwise false",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "sleepTimeout",
            "type": "uint32_t",
            "type_name": "uint32_t sleepTimeout",
            "default": null,
            "description": "The time for the module to sleep, in seconds.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a7b607c0131f9d7f421ecd4e3205934bf",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "sendCommand",
        "brief": "Recursive variadic template to send commands.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": true,
        "templates": [
          {
            "type": "typename...",
            "name": "Args",
            "default": "",
            "description": ""
          }
        ],
        "has_param_details": true,
        "params": [
          {
            "name": "cmd",
            "type": "Args...",
            "type_name": "Args... cmd",
            "default": null,
            "description": "The commands to send",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a69ce1209ea5ea1ae617690349766609a",
        "include": null,
        "has_details": true,
        "type": "uint32_t",
        "name": "waitForReady",
        "brief": "<strong>Blocking</strong> delay until the camera status returns a status of &quot;OK&quot;, &quot;READY&quot; or &quot;NONE.&quot;",
        "description": "<p>We accept &quot;NONE&quot; as ready because the camera sometimes returns &quot;NONE&quot; when it&#x27;s not currently doing anything.</p>",
        "return_value": "The number of milliseconds waited, or 0 if the operation timed out",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "initial_delay",
            "type": "uint32_t",
            "type_name": "uint32_t initial_delay",
            "default": "0",
            "description": "The amount of time to wait before asking the camera for status; optional with a default value of 0. The inital delay is useful to avoid hammering the camera with status requests after starting an operation known to be slow - like autofocus.",
            "direction": ""
          },
          {
            "name": "timeout",
            "type": "uint32_t",
            "type_name": "uint32_t timeout",
            "default": "60000L",
            "description": "The maximum number of milliseconds to wait; optional with a default of 60,000 (1 minute)",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "aecb948ab1d0005ea9e4b6bbdf1f09d7e",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "waitResponse",
        "brief": "Listen for responses to commands and handle URCs.",
        "description": "",
        "return_value": "the index of the response input",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "timeout_ms",
            "type": "uint32_t",
            "type_name": "uint32_t timeout_ms",
            "default": null,
            "description": "The time to wait for a response",
            "direction": ""
          },
          {
            "name": "data",
            "type": "String&amp;",
            "type_name": "String&amp; data",
            "default": null,
            "description": "A string of data to fill in with response results",
            "direction": ""
          },
          {
            "name": "r1",
            "type": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a>",
            "type_name": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a> r1",
            "default": "<a href=\"_geolux_camera_8h.html#ac7732a2cd6b1ec4c9c479395bfaa9ab0\" class=\"m-doc\">GEOLUX_<wbr />OK</a>",
            "description": "The first output to test against, optional with a default value of &quot;OK&quot;",
            "direction": ""
          },
          {
            "name": "r2",
            "type": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a>",
            "type_name": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a> r2",
            "default": "<a href=\"_geolux_camera_8h.html#a69263b5178009f8d93e053155e76a239\" class=\"m-doc\">GEOLUX_<wbr />ERROR</a>",
            "description": "The second output to test against, optional with a default value of &quot;ERROR&quot;",
            "direction": ""
          },
          {
            "name": "r3",
            "type": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a>",
            "type_name": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a> r3",
            "default": "<a href=\"_geolux_camera_8h.html#a2a2ba0e334e7c50ef93eb3868ef1b666\" class=\"m-doc\">GEOLUX_<wbr />BUSY</a>",
            "description": "The third output to test against, optional with a default value of &quot;BUSY&quot;",
            "direction": ""
          },
          {
            "name": "r4",
            "type": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a>",
            "type_name": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a> r4",
            "default": "<a href=\"_geolux_camera_8h.html#a7737b92095e8e7c289546294da9b11ac\" class=\"m-doc\">GEOLUX_<wbr />NONE</a>",
            "description": "The fourth output to test against, optional with a default value of &quot;NONE&quot;",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a2ba44ab9916d6298c558572bfdab2ead",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "waitResponse",
        "brief": "Listen for responses to commands and handle URCs.",
        "description": "",
        "return_value": "the index of the response input",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "timeout_ms",
            "type": "uint32_t",
            "type_name": "uint32_t timeout_ms",
            "default": null,
            "description": "The time to wait for a response",
            "direction": ""
          },
          {
            "name": "r1",
            "type": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a>",
            "type_name": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a> r1",
            "default": "<a href=\"_geolux_camera_8h.html#ac7732a2cd6b1ec4c9c479395bfaa9ab0\" class=\"m-doc\">GEOLUX_<wbr />OK</a>",
            "description": "The first output to test against, optional with a default value of &quot;OK&quot;",
            "direction": ""
          },
          {
            "name": "r2",
            "type": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a>",
            "type_name": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a> r2",
            "default": "<a href=\"_geolux_camera_8h.html#a69263b5178009f8d93e053155e76a239\" class=\"m-doc\">GEOLUX_<wbr />ERROR</a>",
            "description": "The second output to test against, optional with a default value of &quot;ERROR&quot;",
            "direction": ""
          },
          {
            "name": "r3",
            "type": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a>",
            "type_name": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a> r3",
            "default": "<a href=\"_geolux_camera_8h.html#a2a2ba0e334e7c50ef93eb3868ef1b666\" class=\"m-doc\">GEOLUX_<wbr />BUSY</a>",
            "description": "The third output to test against, optional with a default value of NULL",
            "direction": ""
          },
          {
            "name": "r4",
            "type": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a>",
            "type_name": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a> r4",
            "default": "<a href=\"_geolux_camera_8h.html#a7737b92095e8e7c289546294da9b11ac\" class=\"m-doc\">GEOLUX_<wbr />NONE</a>",
            "description": "The fourth output to test against, optional with a default value of NULL",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "ae7370c51a087b4133b3c5c6b5ed85ac2",
        "include": null,
        "has_details": true,
        "type": "int8_t",
        "name": "waitResponse",
        "brief": "Listen for responses to commands and handle URCs; listening for 1 second.",
        "description": "",
        "return_value": "the index of the response input",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "r1",
            "type": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a>",
            "type_name": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a> r1",
            "default": "<a href=\"_geolux_camera_8h.html#ac7732a2cd6b1ec4c9c479395bfaa9ab0\" class=\"m-doc\">GEOLUX_<wbr />OK</a>",
            "description": "The first output to test against, optional with a default value of &quot;OK&quot;",
            "direction": ""
          },
          {
            "name": "r2",
            "type": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a>",
            "type_name": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a> r2",
            "default": "<a href=\"_geolux_camera_8h.html#a69263b5178009f8d93e053155e76a239\" class=\"m-doc\">GEOLUX_<wbr />ERROR</a>",
            "description": "The second output to test against, optional with a default value of &quot;ERROR&quot;",
            "direction": ""
          },
          {
            "name": "r3",
            "type": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a>",
            "type_name": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a> r3",
            "default": "<a href=\"_geolux_camera_8h.html#a2a2ba0e334e7c50ef93eb3868ef1b666\" class=\"m-doc\">GEOLUX_<wbr />BUSY</a>",
            "description": "The third output to test against, optional with a default value of NULL",
            "direction": ""
          },
          {
            "name": "r4",
            "type": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a>",
            "type_name": "<a href=\"_geolux_camera_8h.html#a9c8c9c8249f99863e157f8fae76e7cab\" class=\"m-doc\">GsmConstStr</a> r4",
            "default": "<a href=\"_geolux_camera_8h.html#a7737b92095e8e7c289546294da9b11ac\" class=\"m-doc\">GEOLUX_<wbr />NONE</a>",
            "description": "The fourth output to test against, optional with a default value of NULL",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a3ba0b29f13348fd6055f0dee6f0817a3",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "streamWrite",
        "brief": "Utility template for writing on a stream.",
        "description": "<p>Function to print text over the camera stream</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": true,
        "templates": [
          {
            "type": "typename",
            "name": "T",
            "default": "",
            "description": "A printable type"
          }
        ],
        "has_param_details": true,
        "params": [
          {
            "name": "last",
            "type": "T",
            "type_name": "T last",
            "default": null,
            "description": "The last item to print",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "ace6e29d16a4762347b4c71782d29bb2e",
        "include": null,
        "has_details": true,
        "type": "void",
        "name": "streamWrite",
        "brief": "Utility template for writing on a stream.",
        "description": "<p>Function to print multiple chunks of printable information over the camera stream</p>",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": true,
        "templates": [
          {
            "type": "typename",
            "name": "T",
            "default": "",
            "description": "A printable type"
          },
          {
            "type": "typename...",
            "name": "Args",
            "default": "",
            "description": ""
          }
        ],
        "has_param_details": true,
        "params": [
          {
            "name": "head",
            "type": "T",
            "type_name": "T head",
            "default": null,
            "description": "The first item to print",
            "direction": ""
          },
          {
            "name": "tail",
            "type": "Args...",
            "type_name": "Args... tail",
            "default": null,
            "description": "The last item to print",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a4e3e92b651096733be845d57fed54350",
        "include": null,
        "has_details": false,
        "type": "void",
        "name": "streamDump",
        "brief": "Read a throw away any characters left in the camera stream.",
        "description": "",
        "return_value": null,
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": false,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": false,
        "params": []
      }
    ],
    "signals": [],
    "public_slots": [],
    "public_static_vars": [],
    "public_vars": [],
    "protected_types": [],
    "protected_static_funcs": [],
    "protected_funcs": [
      {
        "base_url": "class_geolux_camera.html",
        "id": "a2f976d414f4b7972620017df81dc3b67",
        "include": null,
        "has_details": true,
        "type": "bool",
        "name": "streamFind",
        "brief": "Find a target character within a stream.",
        "description": "<p>A pass through to the stream function.</p>",
        "return_value": "True if the target is found, false if the search times out",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "target",
            "type": "char",
            "type_name": "char target",
            "default": null,
            "description": "The character to find",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "a1ed74c5b44177bd82d74a65c6136aea9",
        "include": null,
        "has_details": true,
        "type": "String",
        "name": "getCameraInfoString",
        "brief": "Get a string within the camera info output.",
        "description": "",
        "return_value": "The string between the start and end tags.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "searchStartTag",
            "type": "const char*",
            "type_name": "const char* searchStartTag",
            "default": null,
            "description": "The tag/characters preceding the desired info - this should be the text string for the desired information.",
            "direction": ""
          },
          {
            "name": "searchEndTag",
            "type": "char",
            "type_name": "char searchEndTag",
            "default": "&#x27;\\r&#x27;",
            "description": "The tag/characters proceeding the desired info - optional with a default of &#x27;\\r&#x27;.",
            "direction": ""
          },
          {
            "name": "numberSkips",
            "type": "int8_t",
            "type_name": "int8_t numberSkips",
            "default": "0",
            "description": "The number of times to skip the skip character. This is used for fields where multiple bits of information follow the same data tag. Optional with a default of 0.",
            "direction": ""
          },
          {
            "name": "searchSkipTag",
            "type": "const char*",
            "type_name": "const char* searchSkipTag",
            "default": "&quot;,&quot;",
            "description": "The search tag to skip before returning a value. This is used for fields where multiple values follow the same search tag separated by a comma or other delimeter. Optional with a default value of &#x27;,&#x27;.",
            "direction": ""
          }
        ]
      },
      {
        "base_url": "class_geolux_camera.html",
        "id": "ac6aa1d2c7e87c25d2c12ca3ece96b0c4",
        "include": null,
        "has_details": true,
        "type": "long",
        "name": "getCameraInfoInt",
        "brief": "Get integer within the camera info output.",
        "description": "",
        "return_value": "The integer between the start and end tags.",
        "return_values": [],
        "exceptions": [],
        "deprecated": null,
        "since": null,
        "is_constexpr": false,
        "is_consteval": false,
        "is_explicit": false,
        "is_virtual": false,
        "prefix": "",
        "is_defaulted": false,
        "is_deleted": false,
        "is_pure_virtual": false,
        "is_final": false,
        "is_override": false,
        "is_noexcept": false,
        "is_conditional_noexcept": false,
        "suffix": "",
        "is_protected": true,
        "is_private": false,
        "is_signal": false,
        "is_slot": false,
        "has_template_details": false,
        "templates": null,
        "has_param_details": true,
        "params": [
          {
            "name": "searchStartTag",
            "type": "const char*",
            "type_name": "const char* searchStartTag",
            "default": null,
            "description": "The tag/characters preceding the desired info - this should be the text string for the desired information.",
            "direction": ""
          },
          {
            "name": "searchEndTag",
            "type": "char",
            "type_name": "char searchEndTag",
            "default": "&#x27;\\r&#x27;",
            "description": "The tag/characters proceeding the desired info - optional with a default of &#x27;\\r&#x27;.",
            "direction": ""
          },
          {
            "name": "numberSkips",
            "type": "int8_t",
            "type_name": "int8_t numberSkips",
            "default": "0",
            "description": "The number of times to skip the skip character. This is used for fields where multiple bits of information follow the same data tag. Optional with a default of 0.",
            "direction": ""
          },
          {
            "name": "searchSkipTag",
            "type": "const char*",
            "type_name": "const char* searchSkipTag",
            "default": "&quot;,&quot;",
            "description": "The search tag to skip before returning a value. This is used for fields where multiple values follow the same search tag separated by a comma or other delimeter. Optional with a default value of &#x27;,&#x27;.",
            "direction": ""
          }
        ]
      }
    ],
    "protected_slots": [],
    "protected_static_vars": [],
    "protected_vars": [
      {
        "base_url": "class_geolux_camera.html",
        "id": "ab9f4cb0db92cf22333a2e5253969eaa7",
        "include": null,
        "has_details": false,
        "type": "Stream*",
        "is_constexpr": false,
        "is_static": false,
        "is_protected": true,
        "is_private": false,
        "name": "_stream",
        "brief": "The stream instance (serial port) for communication with the Modbus slave (usually over RS485)",
        "description": "",
        "deprecated": null,
        "since": null,
        "has_template_details": false,
        "templates": null
      }
    ],
    "private_funcs": [],
    "private_slots": [],
    "related": [],
    "friend_funcs": [],
    "groups": [],
    "has_enum_details": true,
    "has_typedef_details": false,
    "has_func_details": true,
    "has_var_details": false,
    "has_define_details": false,
    "breadcrumb": [
      [
        "GeoluxCamera",
        "class_geolux_camera.html"
      ]
    ],
    "breadcrumbGroup": [
      [
        "GeoluxCamera",
        "class_geolux_camera.html"
      ]
    ],
    "is_final": false,
    "prefix_wbr": "GeoluxCamera::<wbr />"
  }
}